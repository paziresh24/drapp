// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: rqmTJ9WSF4RQaQFCvo2iUX
// Component: 92eb8gxndpOJ

import * as React from "react";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import Dialog from "../../Dialog"; // plasmic-import: FJiI2-N1is_F/component
import اطلاعاتشخصبمار from "../../\u0627\u0637\u0644\u0627\u0639\u0627\u062A\u0634\u062E\u0635\u0628\u0645\u0627\u0631"; // plasmic-import: NQ_NX6MhhQIl/component
import Button from "../../Button"; // plasmic-import: oVzoHzMf1TLl/component
import TextInput from "../../TextInput"; // plasmic-import: 9dVD7GIhbUbw/component
import دمهتماسامن from "../../\u062F\u0645\u0647\u062A\u0645\u0627\u0633\u0627\u0645\u0646"; // plasmic-import: -iBTMaXovDap/component
import دمهوضعتوزت from "../../\u062F\u0645\u0647\u0648\u0636\u0639\u062A\u0648\u0632\u062A"; // plasmic-import: KtECYHTeUhsP/component
import { Fetcher } from "@plasmicapp/react-web/lib/data-sources";

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_fragment_design_system_css from "../paziresh_24_design_system/plasmic_paziresh_24_design_system.module.css"; // plasmic-import: h9Dbk9ygddw7UVEq1NNhKi/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: rqmTJ9WSF4RQaQFCvo2iUX/projectcss
import sty from "./PlasmicAppointmentCard.module.css"; // plasmic-import: 92eb8gxndpOJ/css

import EitaaIcon from "../fragment_icons/icons/PlasmicIcon__Eitaa"; // plasmic-import: qxWwW7vbw7na/icon
import WhatsappIcon from "../fragment_icons/icons/PlasmicIcon__Whatsapp"; // plasmic-import: oob3UzcKBsd_/icon
import ChevronRightIcon from "../paziresh_24_icons/icons/PlasmicIcon__ChevronRight"; // plasmic-import: GHdF3hS-oP_3/icon
import ChevronLeftIcon from "../paziresh_24_icons/icons/PlasmicIcon__ChevronLeft"; // plasmic-import: r9Upp9NbiZkf/icon
import SearchsvgIcon from "./icons/PlasmicIcon__Searchsvg"; // plasmic-import: D4ulVQNU9fE4/icon
import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: RXQqhirPqnrh/icon

createPlasmicElementProxy;

export type PlasmicAppointmentCard__VariantMembers = {
  onlineBorder: "onlineBorder";
};
export type PlasmicAppointmentCard__VariantsArgs = {
  onlineBorder?: SingleBooleanChoiceArg<"onlineBorder">;
};
type VariantPropType = keyof PlasmicAppointmentCard__VariantsArgs;
export const PlasmicAppointmentCard__VariantProps = new Array<VariantPropType>(
  "onlineBorder"
);

export type PlasmicAppointmentCard__ArgsType = {
  cell?: string;
  name?: string;
  time?: string;
  date?: string;
  bookId?: string;
  nationalcode?: string;
  refId?: string;
  paymentStatus?: string;
  bookType?: string;
  centerName?: string;
  bookDelete?: string;
  bookStatus?: string;
  onlineChannel?: string;
  centerId?: string;
  selectedCenter?: string;
  secureCall?: boolean;
};
type ArgPropType = keyof PlasmicAppointmentCard__ArgsType;
export const PlasmicAppointmentCard__ArgProps = new Array<ArgPropType>(
  "cell",
  "name",
  "time",
  "date",
  "bookId",
  "nationalcode",
  "refId",
  "paymentStatus",
  "bookType",
  "centerName",
  "bookDelete",
  "bookStatus",
  "onlineChannel",
  "centerId",
  "selectedCenter",
  "secureCall"
);

export type PlasmicAppointmentCard__OverridesType = {
  root?: Flex__<"div">;
  dialog?: Flex__<typeof Dialog>;
  ساعتوتارخ?: Flex__<"div">;
  دالوحذفنوبت?: Flex__<typeof Dialog>;
  bookState?: Flex__<"div">;
  dialog2?: Flex__<typeof Dialog>;
  descriptionInput?: Flex__<typeof TextInput>;
  دمهتماسامن?: Flex__<typeof دمهتماسامن>;
  دمهوضعتوزت?: Flex__<typeof دمهوضعتوزت>;
};

export interface DefaultAppointmentCardProps {
  cell?: string;
  name?: string;
  time?: string;
  date?: string;
  bookId?: string;
  nationalcode?: string;
  refId?: string;
  paymentStatus?: string;
  bookType?: string;
  centerName?: string;
  bookDelete?: string;
  bookStatus?: string;
  onlineChannel?: string;
  centerId?: string;
  selectedCenter?: string;
  secureCall?: boolean;
  onlineBorder?: SingleBooleanChoiceArg<"onlineBorder">;
  className?: string;
}

const $$ = {};

function PlasmicAppointmentCard__RenderFunc(props: {
  variants: PlasmicAppointmentCard__VariantsArgs;
  args: PlasmicAppointmentCard__ArgsType;
  overrides: PlasmicAppointmentCard__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {
          secureCall: false
        },
        props.args
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "dialog.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "دالوحذفنوبت.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "deleteBookLoadingButton",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "onlineBorder",
        type: "private",
        variableType: "variant",
        initFunc: ({ $props, $state, $queries, $ctx }) => $props.onlineBorder
      },
      {
        path: "dialog2.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "descriptionInput.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "bookStatusState",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $props.bookStatus;
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return undefined;
              }
              throw e;
            }
          })()
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_fragment_design_system_css.plasmic_tokens,
        sty.root,
        {
          [sty.rootonlineBorder]: hasVariant(
            $state,
            "onlineBorder",
            "onlineBorder"
          )
        }
      )}
      dir={"rtl"}
    >
      <Dialog
        data-plasmic-name={"dialog"}
        data-plasmic-override={overrides.dialog}
        body={
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__dY6Dq)}
          >
            <div
              data-plasmic-name={
                "\u0633\u0627\u0639\u062a\u0648\u062a\u0627\u0631\u062e"
              }
              data-plasmic-override={overrides.ساعتوتارخ}
              className={classNames(projectcss.all, sty.ساعتوتارخ)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__ub08A)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__r61Nx
                  )}
                >
                  <React.Fragment>
                    {(() => {
                      try {
                        return $props.time;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return "";
                        }
                        throw e;
                      }
                    })()}
                  </React.Fragment>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__aIvWk)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__yGySf
                  )}
                >
                  <React.Fragment>
                    {(() => {
                      try {
                        return $props.date;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return "";
                        }
                        throw e;
                      }
                    })()}
                  </React.Fragment>
                </div>
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__eHDpq)}>
              <اطلاعاتشخصبمار
                className={classNames(
                  "__wab_instance",
                  sty.اطلاعاتشخصبمار__fnR3F
                )}
                label={
                  "\u0646\u0627\u0645 \u0648 \u0646\u0627\u0645 \u062e\u0627\u0646\u0648\u0627\u062f\u06af\u06cc"
                }
                value={(() => {
                  try {
                    return $props.name;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()}
              />

              <اطلاعاتشخصبمار
                className={classNames(
                  "__wab_instance",
                  sty.اطلاعاتشخصبمار___96092
                )}
                label={"\u0645\u0648\u0628\u0627\u06cc\u0644"}
                transparent={true}
                value={(() => {
                  try {
                    return $props.cell;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()}
              />

              <اطلاعاتشخصبمار
                className={classNames(
                  "__wab_instance",
                  sty.اطلاعاتشخصبمار__zPkJj
                )}
                label={"\u06a9\u062f\u0645\u0644\u06cc"}
                value={(() => {
                  try {
                    return $props.nationalcode;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()}
              />

              <اطلاعاتشخصبمار
                className={classNames(
                  "__wab_instance",
                  sty.اطلاعاتشخصبمار__gWnzb
                )}
                label={"\u06a9\u062f \u067e\u06cc\u06af\u06cc\u0631\u06cc"}
                transparent={true}
                value={(() => {
                  try {
                    return $props.refId;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()}
              />

              <اطلاعاتشخصبمار
                className={classNames(
                  "__wab_instance",
                  sty.اطلاعاتشخصبمار__mnyrV
                )}
                label={
                  "\u0648\u0636\u0639\u06cc\u062a \u067e\u0631\u062f\u0627\u062e\u062a"
                }
                value={(() => {
                  try {
                    return $props.paymentStatus;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()}
              />

              <اطلاعاتشخصبمار
                className={classNames(
                  "__wab_instance",
                  sty.اطلاعاتشخصبمار__cUyjz
                )}
                label={"\u0646\u0648\u0639 \u0646\u0648\u0628\u062a"}
                transparent={true}
                value={(() => {
                  try {
                    return $props.bookType;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()}
              />

              {(() => {
                try {
                  return $props.bookType === "حضوری";
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return true;
                  }
                  throw e;
                }
              })() ? (
                <اطلاعاتشخصبمار
                  className={classNames(
                    "__wab_instance",
                    sty.اطلاعاتشخصبمار___6Z2Lw
                  )}
                  label={"\u0646\u0627\u0645 \u0645\u0631\u06a9\u0632"}
                  value={(() => {
                    try {
                      return $props.centerName;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()}
                />
              ) : null}
            </div>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__aOdu7)}
            >
              <Button
                children2={
                  "\u062a\u062c\u0648\u06cc\u0632 \u0646\u0633\u062e\u0647"
                }
                className={classNames("__wab_instance", sty.button__kaYx2)}
                endIcon={
                  <ChevronLeftIcon
                    className={classNames(projectcss.all, sty.svg__wyiQn)}
                    role={"img"}
                  />
                }
                startIcon={
                  <ChevronRightIcon
                    className={classNames(projectcss.all, sty.svg__tJEsk)}
                    role={"img"}
                  />
                }
              />

              {(() => {
                try {
                  return $props.bookDelete == "0";
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return true;
                  }
                  throw e;
                }
              })() ? (
                <Button
                  children2={"\u0644\u063a\u0648 \u0646\u0648\u0628\u062a"}
                  className={classNames("__wab_instance", sty.button__fQfIj)}
                  color={"red"}
                  endIcon={
                    <ChevronLeftIcon
                      className={classNames(projectcss.all, sty.svg__xzCly)}
                      role={"img"}
                    />
                  }
                  onClick={async event => {
                    const $steps = {};

                    $steps["updateStateدالوحذفنوبتOpen"] = true
                      ? (() => {
                          const actionArgs = {
                            variable: {
                              objRoot: $state,
                              variablePath: ["دالوحذفنوبت", "open"]
                            },
                            operation: 0,
                            value: true
                          };
                          return (({
                            variable,
                            value,
                            startIndex,
                            deleteCount
                          }) => {
                            if (!variable) {
                              return;
                            }
                            const { objRoot, variablePath } = variable;

                            $stateSet(objRoot, variablePath, value);
                            return value;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["updateStateدالوحذفنوبتOpen"] != null &&
                      typeof $steps["updateStateدالوحذفنوبتOpen"] ===
                        "object" &&
                      typeof $steps["updateStateدالوحذفنوبتOpen"].then ===
                        "function"
                    ) {
                      $steps["updateStateدالوحذفنوبتOpen"] = await $steps[
                        "updateStateدالوحذفنوبتOpen"
                      ];
                    }
                  }}
                  outline={true}
                  startIcon={
                    <ChevronRightIcon
                      className={classNames(projectcss.all, sty.svg__p8ALx)}
                      role={"img"}
                    />
                  }
                />
              ) : null}
            </Stack__>
            <Dialog
              data-plasmic-name={
                "\u062f\u0627\u0644\u0648\u062d\u0630\u0641\u0646\u0648\u0628\u062a"
              }
              data-plasmic-override={overrides.دالوحذفنوبت}
              body={
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__uNdYs)}
                >
                  <Button
                    children2={"\u0644\u063a\u0648 \u0646\u0648\u0628\u062a"}
                    className={classNames("__wab_instance", sty.button__ik0Gy)}
                    color={"red"}
                    endIcon={
                      <ChevronLeftIcon
                        className={classNames(projectcss.all, sty.svg__f8JzX)}
                        role={"img"}
                      />
                    }
                    loading={(() => {
                      try {
                        return $state.deleteBookLoadingButton;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return [];
                        }
                        throw e;
                      }
                    })()}
                    onClick={async event => {
                      const $steps = {};

                      $steps["updateDeleteBookLoadingButton"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["deleteBookLoadingButton"]
                              },
                              operation: 0,
                              value: true
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;

                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateDeleteBookLoadingButton"] != null &&
                        typeof $steps["updateDeleteBookLoadingButton"] ===
                          "object" &&
                        typeof $steps["updateDeleteBookLoadingButton"].then ===
                          "function"
                      ) {
                        $steps["updateDeleteBookLoadingButton"] = await $steps[
                          "updateDeleteBookLoadingButton"
                        ];
                      }

                      $steps["runCode"] = true
                        ? (() => {
                            const actionArgs = {
                              customFunction: async () => {
                                return fetch(
                                  `https://api.paziresh24.com/V1/doctor/books/${$props.bookId}`,
                                  {
                                    headers: {
                                      authorization:
                                        "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL3AyNGRvY3RvcnMuZGFya3ViZS5hcHAvVjEvYXV0aC9sb2dpbiIsImlhdCI6MTcwOTk4NTQzNCwiZXhwIjoxNzE3NzYxNDM0LCJuYmYiOjE3MDk5ODU0MzQsImp0aSI6IlFPMzN6SGtUdWZGNU01MzMiLCJzdWIiOiIxMDUwNTM2IiwibmFtZSI6Itiz24zYp9mF2qkiLCJmYW1pbHkiOiLYsdit2YXYp9mG24wiLCJnZW5kZXIiOiJtYWxlIiwicm9sZSI6InVzZXIiLCJrZXkiOiJ1c2VyLWtleSIsIngtaGFzdXJhLWFsbG93ZWQtcm9sZXMiOlsicHJvdmlkZXIiLCJjb25zdW1lciIsInVzZXIiXSwieC1oYXN1cmEtcHJvdmlkZXItaWQiOiIxNDgzMjUxIn0.Kgh9YPwvT7idh6DJcZE2TCGtuSGwCjoUffCBwdPzzJg"
                                    },
                                    method: "DELETE",
                                    credentials: "include"
                                  }
                                );
                              }
                            };
                            return (({ customFunction }) => {
                              return customFunction();
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["runCode"] != null &&
                        typeof $steps["runCode"] === "object" &&
                        typeof $steps["runCode"].then === "function"
                      ) {
                        $steps["runCode"] = await $steps["runCode"];
                      }

                      $steps["updateDeleteBookLoadingButton2"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["deleteBookLoadingButton"]
                              },
                              operation: 0,
                              value: false
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;

                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateDeleteBookLoadingButton2"] != null &&
                        typeof $steps["updateDeleteBookLoadingButton2"] ===
                          "object" &&
                        typeof $steps["updateDeleteBookLoadingButton2"].then ===
                          "function"
                      ) {
                        $steps["updateDeleteBookLoadingButton2"] = await $steps[
                          "updateDeleteBookLoadingButton2"
                        ];
                      }

                      $steps["updateStateحذفنوبتOpen"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["دالوحذفنوبت", "open"]
                              },
                              operation: 0,
                              value: false
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;

                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateStateحذفنوبتOpen"] != null &&
                        typeof $steps["updateStateحذفنوبتOpen"] === "object" &&
                        typeof $steps["updateStateحذفنوبتOpen"].then ===
                          "function"
                      ) {
                        $steps["updateStateحذفنوبتOpen"] = await $steps[
                          "updateStateحذفنوبتOpen"
                        ];
                      }

                      $steps["updateDialogOpen"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["dialog", "open"]
                              },
                              operation: 0,
                              value: false
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;

                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateDialogOpen"] != null &&
                        typeof $steps["updateDialogOpen"] === "object" &&
                        typeof $steps["updateDialogOpen"].then === "function"
                      ) {
                        $steps["updateDialogOpen"] = await $steps[
                          "updateDialogOpen"
                        ];
                      }
                    }}
                    startIcon={
                      <ChevronRightIcon
                        className={classNames(projectcss.all, sty.svg__nw1Iv)}
                        role={"img"}
                      />
                    }
                  />

                  <Button
                    children2={"\u0627\u0646\u0635\u0631\u0627\u0641"}
                    className={classNames("__wab_instance", sty.button__nqoR7)}
                    color={"sand"}
                    endIcon={
                      <ChevronLeftIcon
                        className={classNames(projectcss.all, sty.svg__hyeaH)}
                        role={"img"}
                      />
                    }
                    onClick={async event => {
                      const $steps = {};

                      $steps["updateStateحذفنوبتOpen"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["دالوحذفنوبت", "open"]
                              },
                              operation: 0,
                              value: false
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;

                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateStateحذفنوبتOpen"] != null &&
                        typeof $steps["updateStateحذفنوبتOpen"] === "object" &&
                        typeof $steps["updateStateحذفنوبتOpen"].then ===
                          "function"
                      ) {
                        $steps["updateStateحذفنوبتOpen"] = await $steps[
                          "updateStateحذفنوبتOpen"
                        ];
                      }
                    }}
                    outline={true}
                    startIcon={
                      <ChevronRightIcon
                        className={classNames(projectcss.all, sty.svg__taKdy)}
                        role={"img"}
                      />
                    }
                  />
                </Stack__>
              }
              className={classNames("__wab_instance", sty.دالوحذفنوبت)}
              onOpenChange={generateStateOnChangeProp($state, [
                "دالوحذفنوبت",
                "open"
              ])}
              open={generateStateValueProp($state, ["دالوحذفنوبت", "open"])}
              title={
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__uVww7
                  )}
                >
                  {
                    "\u0622\u06cc\u0627 \u0627\u0632 \u0644\u063a\u0648 \u0646\u0648\u0628\u062a \u0628\u06cc\u0645\u0627\u0631 \u0627\u0637\u0645\u06cc\u0646\u0627\u0646 \u062f\u0627\u0631\u06cc\u062f\u061f"
                  }
                </div>
              }
              trigger={null}
            />
          </Stack__>
        }
        className={classNames("__wab_instance", sty.dialog, {
          [sty.dialogonlineBorder]: hasVariant(
            $state,
            "onlineBorder",
            "onlineBorder"
          )
        })}
        onOpenChange={generateStateOnChangeProp($state, ["dialog", "open"])}
        open={generateStateValueProp($state, ["dialog", "open"])}
        title={
          "\u0627\u0637\u0644\u0627\u0639\u0627\u062a \u0628\u06cc\u0645\u0627\u0631"
        }
        trigger={
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox___410Hq, {
              [sty.freeBoxonlineBorder___410HqVeX2J]: hasVariant(
                $state,
                "onlineBorder",
                "onlineBorder"
              )
            })}
          >
            <div
              className={classNames(projectcss.all, sty.freeBox__degYy, {
                [sty.freeBoxonlineBorder__degYyVeX2J]: hasVariant(
                  $state,
                  "onlineBorder",
                  "onlineBorder"
                )
              })}
            >
              <div
                className={classNames(projectcss.all, sty.freeBox__c3EtS, {
                  [sty.freeBoxonlineBorder__c3EtSVeX2J]: hasVariant(
                    $state,
                    "onlineBorder",
                    "onlineBorder"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__p1Hdi,
                    {
                      [sty.textonlineBorder__p1HdiVeX2J]: hasVariant(
                        $state,
                        "onlineBorder",
                        "onlineBorder"
                      )
                    }
                  )}
                >
                  <React.Fragment>
                    {(() => {
                      try {
                        return $props.time;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return "15:35";
                        }
                        throw e;
                      }
                    })()}
                  </React.Fragment>
                </div>
              </div>
            </div>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__mrXhv)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__kYvo4,
                  {
                    [sty.textonlineBorder__kYvo4VeX2J]: hasVariant(
                      $state,
                      "onlineBorder",
                      "onlineBorder"
                    )
                  }
                )}
              >
                <React.Fragment>
                  {(() => {
                    try {
                      return $props.name;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return "\u0639\u0627\u0637\u0641\u0647 \u0645\u0647\u062f\u06cc\u0627\u0646 \u067e\u0648\u0631";
                      }
                      throw e;
                    }
                  })()}
                </React.Fragment>
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__f0Voa
                )}
              >
                <React.Fragment>
                  {(() => {
                    try {
                      return $props.cell;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return "09136020023";
                      }
                      throw e;
                    }
                  })()}
                </React.Fragment>
              </div>
            </Stack__>
            <div className={classNames(projectcss.all, sty.freeBox__ekDc)}>
              {(() => {
                try {
                  return $props.onlineChannel === "eitaa";
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return true;
                  }
                  throw e;
                }
              })() ? (
                <EitaaIcon
                  className={classNames(projectcss.all, sty.svg__kiaKm)}
                  role={"img"}
                />
              ) : null}
              {(() => {
                try {
                  return $props.onlineChannel === "whatsapp";
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return true;
                  }
                  throw e;
                }
              })() ? (
                <WhatsappIcon
                  className={classNames(projectcss.all, sty.svg___9I6O)}
                  role={"img"}
                />
              ) : null}
            </div>
          </Stack__>
        }
      />

      <Stack__
        as={"div"}
        data-plasmic-name={"bookState"}
        data-plasmic-override={overrides.bookState}
        hasGap={true}
        className={classNames(projectcss.all, sty.bookState)}
        dir={"rtl"}
      >
        <Dialog
          data-plasmic-name={"dialog2"}
          data-plasmic-override={overrides.dialog2}
          body={
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__dwgfD)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__iY97
                )}
              >
                <React.Fragment>
                  <React.Fragment>
                    {
                      "\u067e\u0632\u0634\u06a9 \u06af\u0631\u0627\u0645\u06cc\n \u0644\u0637\u0641\u0627 \u062f\u0631 \u0635\u0648\u0631\u062a\u06cc \u06a9\u0647 \u0628\u0631\u0627\u06cc \u0628\u06cc\u0645\u0627\u0631 \u0646\u0633\u062e\u0647 \u0627\u0644\u06a9\u062a\u0631\u0648\u0646\u06cc\u06a9 \u062b\u0628\u062a \u06a9\u0631\u062f\u0647 \u0627\u06cc\u062f \u201c"
                    }
                  </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {
                      "\u06a9\u062f \u067e\u06cc\u06af\u06cc\u0631\u06cc \u0646\u0633\u062e\u0647"
                    }
                  </span>
                  <React.Fragment>
                    {
                      "\u201d \u0648 \u062f\u0631 \u0635\u0648\u0631\u062a \u0646\u06cc\u0627\u0632 \u201c"
                    }
                  </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {
                      "\u062a\u0648\u0636\u06cc\u062d\u0627\u062a \u062f\u0631\u0645\u0627\u0646"
                    }
                  </span>
                  <React.Fragment>
                    {
                      "\u201d \u062e\u0648\u062f \u0631\u0627 \u06cc\u0627\u062f\u062f\u0627\u0634\u062a \u0646\u0645\u0627\u06cc\u06cc\u062f.\n\n(\u0627\u06cc\u0646 \u0645\u062a\u0646 \u0628\u0631\u0627\u06cc \u0628\u06cc\u0645\u0627\u0631 "
                    }
                  </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {"\u067e\u06cc\u0627\u0645\u06a9"}
                  </span>
                  <React.Fragment>
                    {
                      " \u062e\u0648\u0627\u0647\u062f \u0634\u062f \u0648 \u0628\u0647 \u0645\u0646\u0638\u0648\u0631 \u0627\u062a\u0645\u0627\u0645 \u0648\u06cc\u0632\u06cc\u062a \u0645\u06cc \u0628\u0627\u0634\u062f.)\n"
                    }
                  </React.Fragment>
                </React.Fragment>
              </div>
              <TextInput
                data-plasmic-name={"descriptionInput"}
                data-plasmic-override={overrides.descriptionInput}
                className={classNames("__wab_instance", sty.descriptionInput)}
                onChange={(...eventArgs) => {
                  generateStateOnChangeProp($state, [
                    "descriptionInput",
                    "value"
                  ])((e => e.target?.value).apply(null, eventArgs));
                }}
                placeholder={
                  "\u062a\u0648\u0636\u06cc\u062d\u0627\u062a \u062e\u0648\u062f \u0631\u0627 \u0648\u0627\u0631\u062f \u06a9\u0646\u06cc\u062f."
                }
                value={
                  generateStateValueProp($state, [
                    "descriptionInput",
                    "value"
                  ]) ?? ""
                }
              />

              <Button
                children2={"\u062b\u0628\u062a"}
                className={classNames("__wab_instance", sty.button___5NFzc)}
                endIcon={
                  <ChevronLeftIcon
                    className={classNames(projectcss.all, sty.svg__eIhh2)}
                    role={"img"}
                  />
                }
                onClick={async event => {
                  const $steps = {};

                  $steps["runCode"] = true
                    ? (() => {
                        const actionArgs = {
                          customFunction: async () => {
                            return fetch(
                              `https://api.paziresh24.com/V1/doctor/centers/5532/books/${$props.bookId}/description`,
                              {
                                method: "PATCH",
                                body: JSON.stringify({
                                  description: $state.descriptionInput.value
                                }),
                                headers: {
                                  "Content-Type": "application/json",
                                  authorization:
                                    "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL3AyNGRvY3RvcnMuZGFya3ViZS5hcHAvVjEvYXV0aC9sb2dpbiIsImlhdCI6MTcxMTQzODg2MywiZXhwIjoxNzE5MjE0ODYzLCJuYmYiOjE3MTE0Mzg4NjMsImp0aSI6IjZxZzZFTEw5VEFBcHIzSzkiLCJzdWIiOiIxMDUwNTM2IiwibmFtZSI6Itiz24zYp9mF2qkiLCJmYW1pbHkiOiLYsdit2YXYp9mG24wiLCJnZW5kZXIiOiJtYWxlIiwicm9sZSI6InVzZXIiLCJrZXkiOiJ1c2VyLWtleSIsIngtaGFzdXJhLWFsbG93ZWQtcm9sZXMiOlsicHJvdmlkZXIiLCJjb25zdW1lciIsInVzZXIiXSwieC1oYXN1cmEtcHJvdmlkZXItaWQiOiIxNDgzMjUxIn0.1XP5971VCXV50kkgINS42ujXKypDsWQ7VgL0PgbHgtY"
                                }
                              }
                            );
                          }
                        };
                        return (({ customFunction }) => {
                          return customFunction();
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["runCode"] != null &&
                    typeof $steps["runCode"] === "object" &&
                    typeof $steps["runCode"].then === "function"
                  ) {
                    $steps["runCode"] = await $steps["runCode"];
                  }

                  $steps["updateBookStatusState"] = true
                    ? (() => {
                        const actionArgs = {
                          variable: {
                            objRoot: $state,
                            variablePath: ["bookStatusState"]
                          },
                          operation: 0,
                          value: "visited"
                        };
                        return (({
                          variable,
                          value,
                          startIndex,
                          deleteCount
                        }) => {
                          if (!variable) {
                            return;
                          }
                          const { objRoot, variablePath } = variable;

                          $stateSet(objRoot, variablePath, value);
                          return value;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateBookStatusState"] != null &&
                    typeof $steps["updateBookStatusState"] === "object" &&
                    typeof $steps["updateBookStatusState"].then === "function"
                  ) {
                    $steps["updateBookStatusState"] = await $steps[
                      "updateBookStatusState"
                    ];
                  }

                  $steps["updateDialog2Open"] = true
                    ? (() => {
                        const actionArgs = {
                          variable: {
                            objRoot: $state,
                            variablePath: ["dialog2", "open"]
                          },
                          operation: 0,
                          value: false
                        };
                        return (({
                          variable,
                          value,
                          startIndex,
                          deleteCount
                        }) => {
                          if (!variable) {
                            return;
                          }
                          const { objRoot, variablePath } = variable;

                          $stateSet(objRoot, variablePath, value);
                          return value;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateDialog2Open"] != null &&
                    typeof $steps["updateDialog2Open"] === "object" &&
                    typeof $steps["updateDialog2Open"].then === "function"
                  ) {
                    $steps["updateDialog2Open"] = await $steps[
                      "updateDialog2Open"
                    ];
                  }
                }}
                startIcon={
                  <ChevronRightIcon
                    className={classNames(projectcss.all, sty.svg__oSMv)}
                    role={"img"}
                  />
                }
              />
            </Stack__>
          }
          className={classNames("__wab_instance", sty.dialog2)}
          noTrigger={(() => {
            try {
              return undefined;
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return [];
              }
              throw e;
            }
          })()}
          onOpenChange={generateStateOnChangeProp($state, ["dialog2", "open"])}
          open={generateStateValueProp($state, ["dialog2", "open"])}
          title={
            "\u062a\u0648\u0636\u06cc\u062d\u0627\u062a \u062f\u0631\u0645\u0627\u0646"
          }
          trigger={null}
        />

        <دمهتماسامن
          data-plasmic-name={
            "\u062f\u0645\u0647\u062a\u0645\u0627\u0633\u0627\u0645\u0646"
          }
          data-plasmic-override={overrides.دمهتماسامن}
          className={classNames("__wab_instance", sty.دمهتماسامن)}
          onclick={async () => {
            const $steps = {};

            $steps["runCode"] = true
              ? (() => {
                  const actionArgs = {
                    customFunction: async () => {
                      return fetch(
                        "https://apigw.paziresh24.com/v1/book-safe-call/${$props.book_id}",
                        {
                          method: "POST",
                          headers: {
                            "Content-Type": "application/json",
                            authorization:
                              "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL3AyNGRvY3RvcnMuZGFya3ViZS5hcHAvVjEvYXV0aC9sb2dpbiIsImlhdCI6MTcxMTYxNDkzMSwiZXhwIjoxNzE5MzkwOTMxLCJuYmYiOjE3MTE2MTQ5MzEsImp0aSI6IjJZcnhsY0J2MUNLS2dTN1AiLCJzdWIiOiIxODg2MDAyIiwibmFtZSI6Itiy2YfYsdmHIiwiZmFtaWx5Ijoi2KfYsdiv2KfZhtuMIiwiZ2VuZGVyIjoiZmVtYWxlIiwicm9sZSI6InVzZXIiLCJrZXkiOiJ1c2VyLWtleSIsIngtaGFzdXJhLWFsbG93ZWQtcm9sZXMiOlsicHJvdmlkZXIiLCJjb25zdW1lciIsInVzZXIiXSwieC1oYXN1cmEtcHJvdmlkZXItaWQiOiIxNDk0MjM4In0.FP05wQkIB94RrZcZMa9bcizZOHl6j3NpdU3Rr06r63U"
                          },
                          body: JSON.stringify({ book_id: $props.bookId })
                        }
                      );
                    }
                  };
                  return (({ customFunction }) => {
                    return customFunction();
                  })?.apply(null, [actionArgs]);
                })()
              : undefined;
            if (
              $steps["runCode"] != null &&
              typeof $steps["runCode"] === "object" &&
              typeof $steps["runCode"].then === "function"
            ) {
              $steps["runCode"] = await $steps["runCode"];
            }
          }}
        />

        <دمهوضعتوزت
          data-plasmic-name={
            "\u062f\u0645\u0647\u0648\u0636\u0639\u062a\u0648\u0632\u062a"
          }
          data-plasmic-override={overrides.دمهوضعتوزت}
          came={(() => {
            try {
              return $state.bookStatusState == "came";
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return [];
              }
              throw e;
            }
          })()}
          className={classNames("__wab_instance", sty.دمهوضعتوزت)}
          deleted={(() => {
            try {
              return $props.bookDelete == "1";
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return [];
              }
              throw e;
            }
          })()}
          onclick={async () => {
            const $steps = {};

            $steps["updateDialog2Open"] =
              $state.bookStatusState == "came" && $props.bookDelete == "0"
                ? (() => {
                    const actionArgs = {
                      variable: {
                        objRoot: $state,
                        variablePath: ["dialog2", "open"]
                      },
                      operation: 0,
                      value: true
                    };
                    return (({ variable, value, startIndex, deleteCount }) => {
                      if (!variable) {
                        return;
                      }
                      const { objRoot, variablePath } = variable;

                      $stateSet(objRoot, variablePath, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
            if (
              $steps["updateDialog2Open"] != null &&
              typeof $steps["updateDialog2Open"] === "object" &&
              typeof $steps["updateDialog2Open"].then === "function"
            ) {
              $steps["updateDialog2Open"] = await $steps["updateDialog2Open"];
            }

            $steps["runCode"] =
              $state.bookStatusState == "not_came" && $props.bookDelete == "0"
                ? (() => {
                    const actionArgs = {
                      customFunction: async () => {
                        return fetch(
                          "https://api.paziresh24.com/V1/doctor/book/came",
                          {
                            method: "PUT",
                            headers: {
                              "Content-Type": "application/json",
                              authorization:
                                "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL3AyNGRvY3RvcnMuZGFya3ViZS5hcHAvVjEvYXV0aC9sb2dpbiIsImlhdCI6MTcxMTQzODg2MywiZXhwIjoxNzE5MjE0ODYzLCJuYmYiOjE3MTE0Mzg4NjMsImp0aSI6IjZxZzZFTEw5VEFBcHIzSzkiLCJzdWIiOiIxMDUwNTM2IiwibmFtZSI6Itiz24zYp9mF2qkiLCJmYW1pbHkiOiLYsdit2YXYp9mG24wiLCJnZW5kZXIiOiJtYWxlIiwicm9sZSI6InVzZXIiLCJrZXkiOiJ1c2VyLWtleSIsIngtaGFzdXJhLWFsbG93ZWQtcm9sZXMiOlsicHJvdmlkZXIiLCJjb25zdW1lciIsInVzZXIiXSwieC1oYXN1cmEtcHJvdmlkZXItaWQiOiIxNDgzMjUxIn0.1XP5971VCXV50kkgINS42ujXKypDsWQ7VgL0PgbHgtY"
                            },
                            body: JSON.stringify({ book_id: $props.bookId })
                          }
                        );
                      }
                    };
                    return (({ customFunction }) => {
                      return customFunction();
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
            if (
              $steps["runCode"] != null &&
              typeof $steps["runCode"] === "object" &&
              typeof $steps["runCode"].then === "function"
            ) {
              $steps["runCode"] = await $steps["runCode"];
            }

            $steps["updateBookStatusState"] =
              $state.bookStatusState == "not_came" && $props.bookDelete == "0"
                ? (() => {
                    const actionArgs = {
                      variable: {
                        objRoot: $state,
                        variablePath: ["bookStatusState"]
                      },
                      operation: 0,
                      value: "came"
                    };
                    return (({ variable, value, startIndex, deleteCount }) => {
                      if (!variable) {
                        return;
                      }
                      const { objRoot, variablePath } = variable;

                      $stateSet(objRoot, variablePath, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
            if (
              $steps["updateBookStatusState"] != null &&
              typeof $steps["updateBookStatusState"] === "object" &&
              typeof $steps["updateBookStatusState"].then === "function"
            ) {
              $steps["updateBookStatusState"] = await $steps[
                "updateBookStatusState"
              ];
            }
          }}
          visited={(() => {
            try {
              return $state.bookStatusState == "visited";
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return [];
              }
              throw e;
            }
          })()}
        />
      </Stack__>
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "dialog",
    "\u0633\u0627\u0639\u062a\u0648\u062a\u0627\u0631\u062e",
    "\u062f\u0627\u0644\u0648\u062d\u0630\u0641\u0646\u0648\u0628\u062a",
    "bookState",
    "dialog2",
    "descriptionInput",
    "\u062f\u0645\u0647\u062a\u0645\u0627\u0633\u0627\u0645\u0646",
    "\u062f\u0645\u0647\u0648\u0636\u0639\u062a\u0648\u0632\u062a"
  ],
  dialog: [
    "dialog",
    "\u0633\u0627\u0639\u062a\u0648\u062a\u0627\u0631\u062e",
    "\u062f\u0627\u0644\u0648\u062d\u0630\u0641\u0646\u0648\u0628\u062a"
  ],
  ساعتوتارخ: ["\u0633\u0627\u0639\u062a\u0648\u062a\u0627\u0631\u062e"],
  دالوحذفنوبت: [
    "\u062f\u0627\u0644\u0648\u062d\u0630\u0641\u0646\u0648\u0628\u062a"
  ],
  bookState: [
    "bookState",
    "dialog2",
    "descriptionInput",
    "\u062f\u0645\u0647\u062a\u0645\u0627\u0633\u0627\u0645\u0646",
    "\u062f\u0645\u0647\u0648\u0636\u0639\u062a\u0648\u0632\u062a"
  ],
  dialog2: ["dialog2", "descriptionInput"],
  descriptionInput: ["descriptionInput"],
  دمهتماسامن: ["\u062f\u0645\u0647\u062a\u0645\u0627\u0633\u0627\u0645\u0646"],
  دمهوضعتوزت: ["\u062f\u0645\u0647\u0648\u0636\u0639\u062a\u0648\u0632\u062a"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  dialog: typeof Dialog;
  ساعتوتارخ: "div";
  دالوحذفنوبت: typeof Dialog;
  bookState: "div";
  dialog2: typeof Dialog;
  descriptionInput: typeof TextInput;
  دمهتماسامن: typeof دمهتماسامن;
  دمهوضعتوزت: typeof دمهوضعتوزت;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicAppointmentCard__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicAppointmentCard__VariantsArgs;
    args?: PlasmicAppointmentCard__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicAppointmentCard__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicAppointmentCard__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicAppointmentCard__ArgProps,
          internalVariantPropNames: PlasmicAppointmentCard__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicAppointmentCard__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicAppointmentCard";
  } else {
    func.displayName = `PlasmicAppointmentCard.${nodeName}`;
  }
  return func;
}

export const PlasmicAppointmentCard = Object.assign(
  // Top-level PlasmicAppointmentCard renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    dialog: makeNodeComponent("dialog"),
    ساعتوتارخ: makeNodeComponent(
      "\u0633\u0627\u0639\u062a\u0648\u062a\u0627\u0631\u062e"
    ),
    دالوحذفنوبت: makeNodeComponent(
      "\u062f\u0627\u0644\u0648\u062d\u0630\u0641\u0646\u0648\u0628\u062a"
    ),
    bookState: makeNodeComponent("bookState"),
    dialog2: makeNodeComponent("dialog2"),
    descriptionInput: makeNodeComponent("descriptionInput"),
    دمهتماسامن: makeNodeComponent(
      "\u062f\u0645\u0647\u062a\u0645\u0627\u0633\u0627\u0645\u0646"
    ),
    دمهوضعتوزت: makeNodeComponent(
      "\u062f\u0645\u0647\u0648\u0636\u0639\u062a\u0648\u0632\u062a"
    ),

    // Metadata about props expected for PlasmicAppointmentCard
    internalVariantProps: PlasmicAppointmentCard__VariantProps,
    internalArgProps: PlasmicAppointmentCard__ArgProps
  }
);

export default PlasmicAppointmentCard;
/* prettier-ignore-end */
